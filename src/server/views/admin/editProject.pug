extends ../structure/_base


//- mixin action(actionClass, label, route, imageStr)
//-     a(route=route, class=actionClass, style="cursor: pointer; margin: 0 2px;")
//-         img(width=16, alt=label, src=imageStr)

mixin classificationRow(classification)
    -function prettyDate(date) {
        -var d = date.getDate(date);
        -var monthNames = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
        -var m = monthNames[date.getMonth()];
        -var y = date.getFullYear();
        -return d+' '+m+' '+y;
    -}
    tr
        td #{prettyDate(classification.classifiedOn)}
        td #{classification.classification}
        td #{classification.classifiedBy}
        td #{classification.changeSummary}

mixin mtrlScoreRow(score)
    -function prettyDate(date) {
        -var d = date.getDate(date);
        -var monthNames = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
        -var m = monthNames[date.getMonth()];
        -var y = date.getFullYear();
        -return d+' '+m+' '+y;
    -}
    -function prettyMTRL(mrl, trl) {
        - if (!mrl || !trl) return ''
        - return `MTRL: ${mrl}, ${trl}`
    -}
    tr
        td #{prettyDate(score.scoringDate)}
        td #{prettyMTRL(score.mrl,score.trl)}

mixin scaleOptions()
    each val in [1, 2, 3, 4, 5, 6, 7, 8, 9]
        option(value=val)= val

block content

    h2 Edit project #{project.acronym}
    .edit-project-form: form.form.form--edit-project#edit-project-form
        .form__group
            input#projectid.form__input(type='hidden', required, value=project._id)
        .form__group
            label.form__label(for='acronym') Acronym
            input#acronym.form__input(type='string', required, value=project.acronym)
        .form__group
            label.form__label(for='title') Title
            input#title.form__input(type='string', required, value=project.title)
        .form__group
            label.form__label(for='rcn') RCN
            input#rcn.form__input(type='number', required, value=project.rcn)
        .form__group
            label.form__label(for='startdate') Start date
            input#startdate.form__input(type='string', required, value=`${project.startDate.toISOString().split('T')[0]}`) 
        .form__group
            label.form__label(for='enddate') End date
            input#enddate.form__input(type='string', required, value=`${project.endDate.toISOString().split('T')[0]}`) 
        .form__group
            label.form__label(for='fundingcall') EC funding call (optional)
            input#fundingcall.form__input(type='string', value=project.call)
        .form__group
            label.form__label(for='projecttype') Project type (optional)
            input#projecttype.form__input(type='string', value=project.type)
        .form__group
            label.form__label(for='totalCost') Budget (optional)
            input#totalCost.form__input(type='number', value=project.totalCost)
        .form__group
            label.form__label(for='url') Project homepage
            input#url.form__input(type='string', value=project.url)
        .form__group
            label.form__label(for='fundingbodylink') Funding body entry
            input#fundingbodylink.form__input(type='string', value=project.fundingBodyLink)
        .form__group
            label.form__label(for='cwprojecthublink') CW ProjectHUB link
            input#cwprojecthublink.form__input(type='string', value=project.cwurl)
        .form__group
            label.form__label(for='teaser') Teaser
            textarea#teaser.form__input(type='string', required, cols="70", rows="10")= project.teaser
        .form__group
            button.btn#btn--create-project Save project


    h2 Add MTRL score
    table
        thead
            tr
                td When
                td Score
        each s in mtrlScores
            +mtrlScoreRow(s)
    
    p

    .addscore-form: form.form.form--add-score#add-score-form
        .form__group
            input#cwid.form__input(type='hidden', required, value=project.cw_id)
        .form__group
            label.form__label(for="mrl") MRL
            select#mrl(name="mrl")
                +scaleOptions()
        .form__group
            label.form__label(for="trl") TRL
            select#trl(name="trl")
                +scaleOptions()
        .form__group
            label.form__label(for="scoringDate") Scored on
            input#scoringdate.form__input(type="date")
        .form__group
            button.btn#btn--add-score Add

    h2 Add Classification
    table
        thead
            tr
                td When
                td Classification
                td By
                td Reason
        each c in classifications
            +classificationRow(c)
    
    .addcategory-form: form.form.form--add-category#add-category-form
        .form__group
            input#cwid.form__input(type='hidden', required, value=project.cw_id)
        .form__group
            label.form__label(for="classification") Category
            select#classification(name="classification")
                option(value="Secure Systems")= "Secure Systems"
                option(value="Verification & Assurance")= "Verification & Assurance"
                option(value="Operational Risk")= "Operational Risk"
                option(value="Identity & Privacy")= "Identity & Privacy"
                option(value="Cybersecurity Governance")= "Cybersecurity Governance"
                option(value="Human Aspects")= "Human Aspects"
        .form__group
            label.form__label(for='changeSummary') Reason
            input#changeSummary.form__input(type='string', required)
        .form__group
            button.btn#btn--add-category Add

    h2 Edit project tags
    .edittags-form: form.form.form--edit-tags#edit-tags-form
        +jrcDimension(jrcTaxonomy.cybersecurity)
        +jrcDimension(jrcTaxonomy.sectors)
        +jrcDimension(jrcTaxonomy.technology)
        .form__group
            button.btn#btn--edit-Tags Set tags

mixin jrcDimension(dimension)
    ul: li
        - if (project.tags.includes(dimension.tag))
            input.dimension-header(type='checkbox', name=dimension.tag, value=dimension.tag, checked)
        - else 
            input.dimension-header(type='checkbox', name=dimension.tag, value=dimension.tag)
        label(for=dimension.tag)= dimension.name
        li: ul
            each term in dimension.terms
                li 
                    - if (project.tags.includes(term.tag))
                        input.term(type='checkbox', name=term.tag, value=term.tag, checked)
                    - else 
                        input.term(type='checkbox', name=term.tag, value=term.tag)
                    label(for=term.tag)= term.name