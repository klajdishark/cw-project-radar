##########################################################################
##                                                                      ##
##  IMPORTANT NOTICE                                                    ##
##                                                                      ##
##  This configuration file contains sensitice information. Therefore,  ##
##  read access to this file MUST be properly restricted in producion   ##
##  environments.                                                       ##
##                                                                      ##
##  NEVER EVER use the same database or the same DB user credentials    ##
##  for development and production!                                     ##
##                                                                      ##
##########################################################################

#
# set node.js to development mode
#
# Example: NODE_ENV=production
#
NODE_ENV=development

#
# Logging level
#
# Default: 'info'
#
# Set to any one of [error, warn, info, http, verbose, debug, silly]
#LOG_LEVEL=info

#
# Server port. 
#
# The application binds to any IP address (i.e. 0.0.0.0) on the specified port.
# Default: 8080
#
PORT=8080

#
# DB setup
#
# The MongoDB connection URL. 
#
# If using a local MongoDB instance, you may be able to omit username and password access
# it will only ever be accessible from the same machine.
#
# Example (local): 
# DB_URL="mongodb://localhost:27017/<DB>?ssl=false"
#
# Example (remote):
# Get the necessary information from the MongoDB service admin panel (e.g. MongoDB Atlas)
# <USER> - username for a db user
# <PASSWORD> - the user's password. Supply in clear text.
# <SERVER> - the remote server address
# <DB> - The DB instance configured on the MongoDB server
# DB_URL=mongodb+srv://john:doe@cw-project-radar-xxxx.mongodb.net/cw-project-radar?retryWrites=true&w=majority
#
DB_URL=""

#
# JSON Web Token setup
#
# The secret passphrase used to generate and sign JWTs
JWT_SECRET=<CURRENTLY NOT IN USE>
# The expiration date of the token, given in days (24 hours).
JWT_EXPIRES_IN=<CURRENTLY NOT IN USE>
# The expiration time of the JWT cookie, given in days (24 hours).
JWT_COOKIE_EXPIRES_IN=<CURRENTLY NOT IN USE>


#
# Radar model configuration
#
# The maximum age of projects, in months
MODEL_MAX_AGE=36
# The names of the segments (against which projects classification is validated).
# The order of the names is important; segments are rendered clockwise with the first
# segment starting at the 12 o'clock position.
# A comma separated list of segment names, in double quotes
MODEL_SEGMENTS="Secure Systems, Verification & Assurance, Operational Risk, Identity & Privacy, Cybersecurity Governance, Human Aspects"
# Names of the rings of the radar. Used to validate radar ring location for projects/blips
# Order of names is important; rings start innermost across all segments.
# Semantic allocation of rings is application specific (and handled in code)
MODEL_RINGS="Adopt, Trial, Assess, Hold, Drop"
# The lifecycle stages of a project. While currently the same as the rings albeit in different order
# these may change into a different model in the future.
MODEL_LCYCLE="Assess, Trial, Adopt, Hold, Drop"
# Gradients used for the colouring of blips.
# Defaults are: #FF0000 (red), #FF7F00 (orange), #FFFF00 (yellow), #BFFF00 (light-green) and #00FF00 (lime)
GRADIENTS="#FF0000, #FF7F00, #FFFF00, #BFFF00, #00FF00"
